var mongo = require('mongodb');

var Server = mongo.Server,
Db = mongo.Db,
BSON = mongo.BSONPure;

var server = new Server('localhost', 27017, {auto_reconnect: true});
db = new Db('spotdb', server);

db.open(function(err, db) {
    if(!err) {
        console.log("Connected to 'spotdb' database");
        db.collection('maps', {strict:true}, function(err, collection) {
            if (err) {
                console.log("The 'maps' collection doesn't exist. Creating it with sample data...");
                populateDB();
            }
        });
    }
});

exports.findById = function(req, res) {
    var id = req.params.id;
    console.log('Retrieving map with _id = [ ' + id + ']');
    db.collection('maps', function(err, collection) {
        collection.findOne({'_id':new BSON.ObjectID(id)}, function(err, item) {
            // Wrap the location in a root element called "spot".
            res.json(item);
        });
    });
};

exports.findAll = function(req, res) {
    db.collection('maps', function(err, collection) {
        collection.find().toArray(function(err, items) {
	    res.send(items);
        });
    });
};

exports.add = function(req, res) {
    var map = req.body;
    map.creationDate = new Date();
    map.modificationDate = new Date();
    console.log('Adding map: ' + JSON.stringify(map));
    db.collection('maps', function(err, collection) {
        collection.insert(map, {safe:true}, function(err, result) {
            if (err) {
                res.send({'error':'An error has occurred'});
            } else {
                console.log('Success: ' + JSON.stringify(result[0]));
                res.send(result[0]);
            }
        });
    });
}

exports.update = function(req, res) {
    var id = req.params.id;
    var map = req.body;
    map.modificationDate = new Date();
    console.log('Updating map: ' + id);
    console.log(JSON.stringify(map));
    db.collection('maps', function(err, collection) {
        collection.update({'_id':new BSON.ObjectID(id)}, map, {safe:true}, function(err, result) {
            if (err) {
                console.log('Error updating map: ' + err);
                res.send({'error':'An error has occurred'});
            } else {
                console.log('' + result + ' document(s) updated');
                map._id = id;
		console.log(JSON.stringify(map));
		res.send(map);
            }
        });
    });
}

exports.delete = function(req, res) {
    var id = req.params.id;
    console.log('Deleting map: ' + id);
    db.collection('maps', function(err, collection) {
        collection.remove({'_id':new BSON.ObjectID(id)}, {safe:true}, function(err, result) {
            if (err) {
                res.send({'error':'An error has occurred - ' + err});
            } else {
                console.log('' + result + ' document(s) deleted');
                res.send({});
            }
        });
    });
};

/*--------------------------------------------------------------------------------------------------------------------*/
// Populate database with sample data -- Only used once: the first time the application is started.
// You'd typically not find this code in a real-life app, since the database would already exist.
var populateDB = function() {
    
    var spots = [
	{
	    "title": "paintball75",
	    "description": "Un super terrain de paintball",
	    "sports": "paintball",
	    "longitude": 2.340841,
	    "latitude": 48.8650429,
	    "_id": "1"
	},
	{
	    "title": "cinema de suresnes",
	    "description": "Le meilleur cinema du grand Ouest",
	    "sports": "cinema",
	    "longitude": 2.242201,
	    "latitude": 48.8649466,
	    "_id": "2"
	},
	{
	    "title": "bowling du chaton",
	    "description": "Le meilleur bowling pour chats",
	    "sports": "bowling",
	    "longitude": 2.302201,
	    "latitude": 48.9649466,
	    "_id": "3"
	}
    ];

    var maps = [
	{
	    "title": "Les bars à chat de Paris",
	    "description": "Carte des meilleurs bars parisiens dans lesquels votre minou sera chouchouté",
	    "tags": ['bar','chat','paris'],
	    "contributors_count": "12",
	    "markers_count": "63",
	    "spots": spots,
	    "creationDate": "",
	    "modificationDate" : "",
	    "private": true 
	},
	{
	    "title": "Les hotels à chat",
	    "description": "Carte des meilleurs hotels pour chat",
	    "tags": ['chat','hotel'],
	    "contributors_count": "4",
	    "markers_count": "15",
	    "spots": [],
	    "creationDate": "",
	    "modificationDate" : "",
	    "private": false
	},
	{
	    "title": "Les plus beau chats",
	    "description": "Spottez votre chat. Trop mignon !!",
	    "tags": ['beauté','chat','mignon', 'grraou'],
	    "contributors_count": "1274",
	    "markers_count": "1274",
	    "spots": spots,
	    "creationDate": "",
	    "modificationDate" : "",
	    "private": true
	},
	{
	    "title": "Les plus beau chiens",
	    "description": "Spottez votre chien. Trop mignon !!",
	    "tags": ['beauté','chien','mignon'],
	    "contributors_count": "643",
	    "markers_count": "643",
	    "spots": spots,
	    "creationDate": "",
	    "modificationDate" : "",
	    "private": false
	}];
 
    db.collection('maps', function(err, collection) {
	console.log('good job');
	collection.insert(maps, {safe:true}, function(err, result) {});
    });

};



